name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore src/SamtryggBrfPortal.sln
    
    - name: Build
      run: dotnet build src/SamtryggBrfPortal.sln --configuration Release --no-restore
    
    - name: Test
      run: dotnet test src/SamtryggBrfPortal.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage
        fail_ci_if_error: false
    
    - name: Publish
      run: dotnet publish src/SamtryggBrfPortal.Web/SamtryggBrfPortal.Web.csproj --configuration Release --no-build --output ./publish
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ./publish

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: 'https://staging.samtrygg-brf-portal.com'
        allow_issue_writing: false
        fail_action: false
    
    - name: Run Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'SamtryggBrfPortal'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --failOnCVSS 7
          --enableRetired
    
    - name: Upload dependency check report
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: reports

  docker-build:
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Login to Azure Container Registry
      run: az acr login --name samtryggacr
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: samtryggacr.azurecr.io/samtrygg-brf-portal:${{ github.sha }},samtryggacr.azurecr.io/samtrygg-brf-portal:latest
        cache-from: type=registry,ref=samtryggacr.azurecr.io/samtrygg-brf-portal:latest
        cache-to: type=inline

  deploy-staging:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Deploy to Azure Web App (Staging)
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'samtrygg-brf-portal-staging'
        slot-name: 'production'
        images: 'samtryggacr.azurecr.io/samtrygg-brf-portal:${{ github.sha }}'
    
    - name: Run Integration Tests against Staging
      run: |
        dotnet test src/SamtryggBrfPortal.Tests/SamtryggBrfPortal.Tests.csproj \
          --filter "Category=IntegrationTest" \
          --configuration Release \
          --verbosity normal \
          --logger "console;verbosity=detailed" \
          /p:TargetEnvironment=Staging \
          /p:BaseUrl=https://samtrygg-brf-portal-staging.azurewebsites.net

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Deploy to Azure Web App (Production)
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'samtrygg-brf-portal'
        slot-name: 'production'
        images: 'samtryggacr.azurecr.io/samtrygg-brf-portal:${{ github.sha }}'
    
    - name: Purge CDN Endpoint
      run: |
        az cdn endpoint purge \
          --resource-group samtrygg-production-rg \
          --profile-name samtrygg-cdn \
          --name samtrygg-brf-portal \
          --content-paths '/*'
